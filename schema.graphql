schema {
  query: Query
}

type Query {
  meetups(first: Int, after: String): MeetupConnection
  people: PersonConnection
  node(id: ID!): Node
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
}

type MeetupConnection {
  edges: [MeetupEdge]
  pageInfo: PageInfo!
}

type MeetupEdge {
  cursor: String!
  node: Meetup
}

type Meetup implements Node {
  id: ID!
  name: String!
  location: Address!
  start: String!
  organiser: Person!
  presenter: Person!
  attendees: PersonConnection!
}

type Address {
  companyName: String!
  address: String!
  city: String!
  postcode: String!
}

type PersonConnection {
  edges: [PersonEdge]
}

type PersonEdge {
  node: Person
}

type Person implements Node {
  id: ID!
  name: String!
  companyName: String
  interests: [String]!
  meetupsAttending: MeetupConnection!
}
